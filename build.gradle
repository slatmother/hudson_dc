apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'base'
apply from: "$rootDir/gradle/compile.gradle"

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'org.codehaus.groovy', name: 'groovy', version: '2.2.0-beta-1'
  compile group: 'com.google.guava', name: 'guava', version: '14.0.1'
  compile group: 'org.springframework', name: 'spring-jdbc', version: '3.2.3.RELEASE'
  compile fileTree(dir: 'lib/dfc', include: '*.jar')
  compile files('lib/freemarker.jar', 'lib/ojdbc6-11.2.0.1.0.jar')
  testCompile group: 'org.testng', name: 'testng', version: '6.8.5'

  testRuntime fileTree(dir: 'test/resources', include: '*.properties')
}

sourceSets {
  main {
    groovy {
      srcDir 'src/java'
    }

    resources {
      srcDir 'src/resources'
    }

    compileClasspath = configurations.compile
    runtimeClasspath = compileClasspath
  }

  test {
    groovy { srcDir 'test/src' }

    resources {
      srcDir 'test/resources'
    }

    compileClasspath = main.output + configurations.compile + configurations.testRuntime + configurations.testCompile
    runtimeClasspath = compileClasspath + test.output
  }
}

task copyResources(type: Copy) {
  from {
    configurations.compile
  }
//  into 'build/libs/lib'
  into '../hudson_dc_build/lib'
}

task copylibs(type: Copy, dependsOn: copyResources) {
  from {
    configurations.compile
  }
  into 'build/libs/lib'
//  into '../hudson_dc_build/lib'
}


jar {
  dependsOn copylibs

  baseName = 'hudson-dc'
  version = '1.0'
  extension = 'jar'

//  destinationDir = new File('../hudson_dc_build')

  def manifestClasspath = configurations.runtime.collect { "${it.name}" }.join(' ') + ' '

  manifest {
    attributes 'Implementation-Title': 'hudson-dc-1.0',
            "Class-Path": manifestClasspath,
            "Main-Class": "main.Main"
  }
}

//clean.doLast {
//  sourceSets.each {
//    ant.delete(dir: it.classesDir)
//  }
//}
